{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",


    
    "parameters": {

         "Subscrip" : {
          "defaultValue": "SAP-SE" ,

          "allowedValues": [
              "SAP-SE" ,
              "SAP-shared-tenant"
          ] ,
        "type": "string" 
        }
        ,
        "cust-string" : {
          "defaultValue": "HEC45-ARM" ,
        "type": "string" 
        }
      ,

       "environment" : {
          "defaultValue": "nonprod" ,
          "allowedValues": [
              "nonprod",
              "prod"
          ] ,

        "type": "string" 
        }
      ,
       "SID" : {
          "defaultValue": "QS" ,
        "type": "string" 
        } ,

         "Hostname" : {
          "defaultValue": "abc.com" ,
        "type": "string" 
        } ,

         "Fport" : {
          "defaultValue": "443" ,
        "type": "string" 
        } ,

         "Bport" : {
          "defaultValue": "44380" ,
        "type": "string" 
        } ,




        
         "backendCertificateData" : {
          "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHeGpDQ0JhNmdBd0lCQWdJUVRTcjdYTjk5ZHRoMGpTVG1pR0xvV2pBTkJna3Foa2lHOXcwQkFRc0ZBRENCDQpqekVMTUFrR0ExVUVCaE1DUjBJeEd6QVpCZ05WQkFnVEVrZHlaV0YwWlhJZ1RXRnVZMmhsYzNSbGNqRVFNQTRHDQpBMVVFQnhNSFUyRnNabTl5WkRFWU1CWUdBMVVFQ2hNUFUyVmpkR2xuYnlCTWFXMXBkR1ZrTVRjd05RWURWUVFEDQpFeTVUWldOMGFXZHZJRkpUUVNCRWIyMWhhVzRnVm1Gc2FXUmhkR2x2YmlCVFpXTjFjbVVnVTJWeWRtVnlJRU5CDQpNQjRYRFRJeU1EZ3hOVEF3TURBd01Gb1hEVEl6TURreE5USXpOVGsxT1Zvd0xERXFNQ2dHQTFVRUF4TWhkbWh6DQpaSFJrWkRGM1pEQXhMbk5oY0M1a2FYSXVjM1F0WjNKdmRYQXVZMjl0TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGDQpBQU9DQVE4QU1JSUJDZ0tDQVFFQXhVY2xsMnhrVjRDZ0pIWWNOWUVmWlk1M3QrOHZPSzcxWWk2UFJuaFJwY0d2DQpicktSMHkrUzg3aUhNY2g5dUl6Q3oxbHlCVkkvRjlHRWdXME53RzZWcHd2RFgrZW9LMk1uTFloK0pBc2RnMk5GDQpIT1BIMHA4NzRaYlZRcnRSR1dGdU4rNjRTYk1nVXJuckRlL2Jycm1mRi9nd0xRQWhHbW81SDZIQks3KzBjLzlYDQo4ampxMEdicDJqSWt3aEovWkRDc05aK3J2aGp0QW56Wll2eUtxbEhYVThJTTFQYXd3OUFZR0ZBNVZlZ0tEa1Y0DQpoRG02RDNXTVNUQU8xWVVxSVZRQVBDY2c1Q28xZEw5aVpySThPdWMzS0JMNlQ4S093VWQzeXdpTzRzTEMvS2hMDQpHT3ZrM1J1dlJDZmVEZ3krNnphNnp1encyS2lqUWx0QUZlNFh6ZWpDY1FJREFRQUJvNElEZmpDQ0Ezb3dId1lEDQpWUjBqQkJnd0ZvQVVqWXhleEZTdGl1RjM2WnY1bXdYaHVBR05ZZUV3SFFZRFZSME9CQllFRkpxZmNEc1RjS3BuDQpac3ZrME9DemtsUGQyWFdOTUE0R0ExVWREd0VCL3dRRUF3SUZvREFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkDQpKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQkpCZ05WSFNBRVFqQkFNRFFHQ3lzR0FRUUJzakVCDQpBZ0lITUNVd0l3WUlLd1lCQlFVSEFnRVdGMmgwZEhCek9pOHZjMlZqZEdsbmJ5NWpiMjB2UTFCVE1BZ0dCbWVCDQpEQUVDQVRDQmhBWUlLd1lCQlFVSEFRRUVlREIyTUU4R0NDc0dBUVVGQnpBQ2hrTm9kSFJ3T2k4dlkzSjBMbk5sDQpZM1JwWjI4dVkyOXRMMU5sWTNScFoyOVNVMEZFYjIxaGFXNVdZV3hwWkdGMGFXOXVVMlZqZFhKbFUyVnlkbVZ5DQpRMEV1WTNKME1DTUdDQ3NHQVFVRkJ6QUJoaGRvZEhSd09pOHZiMk56Y0M1elpXTjBhV2R2TG1OdmJUQ0NBWDRHDQpDaXNHQVFRQjFua0NCQUlFZ2dGdUJJSUJhZ0ZvQUhZQXJmZSsrbnovRU1pTG5UMmNIajRZYXJSbktWM1BzUXdrDQp5b1dHTk92Y2dvb0FBQUdDb25SanpRQUFCQU1BUnpCRkFpRUEwRkF0elZSS0ZxNi9wK1RJdnNlNnFoQ2h3eFJiDQptSnEwZTU4SG9ReDRwZFlDSUVDSGtiRk9TckpJYzgrSTJ0R21YMzY3cHRnbnhZd3hzSlhjUFRkUE12YmZBSFVBDQplaktNVk5pM0xiWWc2ampnVWg3cGhCWndNaE9GVFR2U0s4RTZWNk5TNjFJQUFBR0NvblJqMFFBQUJBTUFSakJFDQpBaUF5bWpyTmo5MXBWNkQ5d0FmRGYwb0FrNVJjVjVHNFJBTjYvdzFMTXpuZWJ3SWdKRXdIMmUwbndKRTdWb2oyDQpsT2FMUmNVVVJvakFWZmUwcjZySUV4VHI4OHdBZHdEb1B0RGFQdlVHTlRMblZ5aThpV3ZKQTlQTDBSRnI3T3RwDQo0WGQ5YlFhOWJnQUFBWUtpZEdOaEFBQUVBd0JJTUVZQ0lRQ0lMOXZ3cUloU1FzM0ZYOUdSRkdBUHdOWUpKMTdtDQpSNmluOS9TM3JLUGJnd0loQU91bDhuZGMxbURxZXR1MkZFMTJ2VnZoeHBnQmJNa2ZzTXYvS284OHhKcTRNSUdtDQpCZ05WSFJFRWdaNHdnWnVDSVhab2MyUjBaR1F4ZDJRd01TNXpZWEF1WkdseUxuTjBMV2R5YjNWd0xtTnZiWUllDQpabWx2Y21rdFpHVjJMbk5oY0M1a2FYSXVjM1F0WjNKdmRYQXVZMjl0Z2lObWFXOXlhUzF3Y21VdGNISnZaQzV6DQpZWEF1WkdseUxuTjBMV2R5YjNWd0xtTnZiWUlWWm1sdmNtbGtaWFl1YzNRdFozSnZkWEF1WTI5dGdocG1hVzl5DQphWEJ5WlMxd2NtOWtMbk4wTFdkeWIzVndMbU52YlRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQW1NT1Y5eUdkDQpiZHhtVlFWQkE3UGx0WkNlM2YwZEpEMzUwZG94RllhUzQ0Tk5aWWVXcHUzVHdZVSs4dW9ycUJsNDFZTTlDQzJsDQpBdnVaOEtwU1JNSHJ6cHRLYm1jV1poM0VtcHh1Zzk4YnNvbll2cFlLVXM5NG1jNkNjbkFFdEE3YzNRcFEvaWlhDQpySkFQd1JvRXpINlc2L3pRTmhrWmx3Tml3WjVHVld5OElIOFFCYTFOYkQ5N05QL1VRZWZMRkZ2ckZBRVhaUFUvDQp6VytNRlA4NWJTKyt0L1J2Q0s2djEyUWFSV2JqRFFWeWJ2clhGOEptR3R4V2htY1VieGNvczg1U3kxYzMyMnd5DQpCSS9qMlhaamZ3Z3lwcm9iYlNhdzN5YVNpc0dJa2c3Zm4rSXNZZW0wM1pkalNFWlcxdVR0RktvdWo3TC9zdVdnDQp2YjZNRzEyeUFUV0dhdz09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t" ,
        "type": "string" 
        } ,






        "sslCertificateData": {
            "defaultValue": "" ,
            "type": "string",
            "metadata": {
                "description": "The base-64 encoded SSL certificate PFX data."
            }
        },
        "sslCertificatePassword": {
            "type": "securestring",
            "metadata": {
                "description": "The SSL certificate password."
            }
        },
        "vNet_name": {

            "defaultValue" : "myVNet" ,
            "type": "string",
            "metadata": {
                "description": "The ID of the VNet."
            }
        },
        "subnetName": {
            "defaultValue" : "myAGSubnet" ,
            "type": "string",
            "metadata": {
                "description": "The name of the APG Subnet."
            }
        }


    },
    "variables": {
        "networkApiVersion": "2022-01-01",

        "workspace" : "[if(equals(parameters('Subscrip'),'SAP-SE'),'/subscriptions/74568cee-3f07-41ce-9ddc-2f4f6f44b861/resourcegroups/heconazure-loganalytics/providers/microsoft.operationalinsights/workspaces/heconazuresplunk','/subscriptions/50cf698b-3c79-45a6-b160-16e996932043/resourcegroups/heconazureshared-loganalytics/providers/microsoft.operationalinsights/workspaces/heconazuresplunksharedtenant')]"    ,
        
        
        //  "/subscriptions/74568cee-3f07-41ce-9ddc-2f4f6f44b861/resourcegroups/heconazure-loganalytics/providers/microsoft.operationalinsights/workspaces/heconazuresplunk" 

        "subnetId": "[concat(variables('vNetId'), '/subnets/', parameters('subnetName'))]",

        "appGatewayPublicIpAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicipname'))]",

        "appGwname": "[concat('apg-',parameters('cust-string'),'-',parameters('environment'),'01')]",
        "bpname": "[concat('bp-',parameters('cust-string'),'-',parameters('environment'),'-' ,parameters('SID'))]",
        "httpsettingname": "[concat('httpsetting-',parameters('cust-string'),'-',parameters('environment'),'-',parameters('SID'))]",
        "listenername": "[concat('listener-',parameters('cust-string'),'-',parameters('environment'),'-',parameters('SID'))]",
        "publicipname": "[concat('pip-apg',parameters('cust-string'),'-',parameters('environment'),'-01')]",
        "healthprobename": "[concat('hp-',parameters('cust-string'),'-',parameters('environment'),'-',variables('appGwBePort'))]",
        "healthprobe-auth-cer":"[concat(variables('healthprobename'),uniqueString(parameters('SID')))]" ,
        "rulename": "[concat('apgrule-',parameters('cust-string'),'-',parameters('environment'),'-',parameters('SID'))]",
        "diagsettingname": "[concat('diag-apg',parameters('cust-string'),'-',parameters('environment'),'-01')]",

       
        // apg-HEC45-MBU-nonprod-01
        // bp-HEC45-MBU-nonprod-SID
        // httpsetting-HEC45-MBU-nonprod-SID
        // listener-HEC45-MBU-https-nonprod-SID
        // pip-apg-HEC45-MBU-nonProd-01
        // apgrule-HEC45-MBU-nonprod-SID
        // hp-HEC45-MBU-SID-44380
        // diag-apg-HEC45-MBU-nonprod-01
          

        "appGwId": "[resourceId('Microsoft.Network/applicationGateways/', variables('appGwname'))]",

        "appGwSize": "WAF_Medium",
        "appGwTier": "WAF",
        "appGwCapacity": 2,
        "appGwFePort": "[parameters('Fport')]",
        "appGwFeProtocol": "Https",
        "appGwBePort": "[parameters('Bport')]",
        "appGwBEProtocol": "Https" ,
         "vnetId" :  "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Network/virtualNetworks/',parameters('vnet_name'))]"
        
    },
    "resources": [
      {

       "apiVersion": "2017-05-01-preview",
   "name": "[concat(variables('appGwname'), '/Microsoft.Insights/diagnosticSettings')]",
   "type":"Microsoft.Network/applicationGateways/providers/diagnosticSettings",
   "location": "[resourceGroup().location]" ,
     "dependsOn": [
                "[concat('Microsoft.Network/applicationGateways/', variables('appGwname'))]"
            ],
    //  "id": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Insights/diagnosticSettings/',variables('diagsettingname'))]"
    // ,
    
   
   "properties":
    {

          "name":"[variables('diagsettingname')]",
        "logs": [
            {
                "category": "ApplicationGatewayAccessLog",
                "categoryGroup": null,
                "enabled": true,
                "retentionPolicy": {
                    "days": 0,
                    "enabled": false
                }
            },
            {
                "category": "ApplicationGatewayPerformanceLog",
                "categoryGroup": null,
                "enabled": true,
                "retentionPolicy": {
                    "days": 0,
                    "enabled": false
                }
            },
            {
                "category": "ApplicationGatewayFirewallLog",
                "categoryGroup": null,
                "enabled": true,
                "retentionPolicy": {
                    "days": 0,
                    "enabled": false
                }
            }
        ],
        "metrics": [
            {
                "enabled": true,
                "retentionPolicy": {
                    "days": 0,
                    "enabled": false
                },
                "category": "AllMetrics"
            }
        ],
        "workspaceId": "[variables('workspace')]",
        "logAnalyticsDestinationType": null
    }
     }

 ,
        


        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name":"[variables('publicipname')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "[variables('networkApiVersion')]",
            "comments": "This creates a single, dynamically allocated public IP address for use by the Application Gateway.",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },




        {
            "type": "Microsoft.Network/applicationGateways",
            "name": "[variables('appGwname')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "[variables('networkApiVersion')]",
            "comments": "This creates the Application Gateway.",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicipname'))]"
            ],
            "properties": {
                "sku": {
                    "name": "[variables('appGwSize')]",
                    "tier": "[variables('appGwTier')]",
                    "capacity": "[variables('appGwCapacity')]"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "gatewayIpCofig",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            }
                        }
                    }
                ],

                 "authenticationCertificates": [
                    {
                        "name": "[variables('healthprobe-auth-cer')]",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('appGwname')), '/authenticationCertificates/',variables('healthprobe-auth-cer'))]",
                        "properties": {
                            "data": "[parameters('backendCertificateData')]"
                        }
                    }  ]  ,
                "frontendIPConfigurations": [
                    {
                        "name": "frontendIpConfig",
                        "properties": {
                            "PublicIPAddress": {
                                "id": "[variables('appGatewayPublicIpAddressId')]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "frontendPort",
                        "properties": {
                            "Port": "[variables('appGwFePort')]"
                        }
                    }
                ],
                "sslCertificates": [
                    {
                        "name": "appGwSslCertificate",
                        "properties": {
                            "data": "[parameters('sslCertificateData')]",
                            "password": "[parameters('sslCertificatePassword')]"
                        }
                    }
                ],
                "backendAddressPools": [
                    {    
                        

                        "name": "[variables('bpname')]" ,
                            // 10.0.1.4
                          "properties": {
                            "backendAddresses": [
                               {  
                                   "ipAddress": "10.0.1.4" 
                            
                                } ,
                                 { 
                                     
                                   "ipAddress": "10.0.1.5" 
                            
                                }
                            ]  
                          }



                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name":  "[variables('httpsettingname')]",
                        "properties": {
                            "Port": "[variables('appGwBePort')]",
                            "Protocol": "[variables('appGwBeProtocol')]"
                            ,
                            "cookieBasedAffinity": "Enabled",
                            "pickHostNameFromBackendAddress": false,
                            "affinityCookieName": "ApplicationGatewayAffinity",
                            "requestTimeout": 600,
                                   "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('appGwname')), '/probes/',variables('healthprobename'))]"
                            },
                            "authenticationCertificates": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/applicationGateways',variables('appGwname')), '/authenticationCertificates/',variables('healthprobe-auth-cer'))]"
                                }
                            ]
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name":  "[variables('listenername')]",
                        "properties": {
                            "FrontendIPConfiguration": {
                                "Id": "[concat(variables('appGwId'), '/frontendIPConfigurations/frontendIpConfig')]"
                            },
                            "FrontendPort": {
                                "Id": "[concat(variables('appGwId'), '/frontendPorts/frontendPort')]"
                            },
                            "Protocol": "[variables('appGwFeProtocol')]",
                            "SslCertificate": {
                                "id": "[concat(variables('appGwId'), '/sslCertificates/appGwSslCertificate')]"
                            }
                            ,
                            "hostName":  "[parameters('Hostname')]",
                            "hostNames": [],
                            "requireServerNameIndication": true
                        }
                    }
                ],
                "sslPolicy": {
                    "policyType": "Predefined",
                    "policyName": "AppGwSslPolicy20170401S"
                },
                "webApplicationFirewallConfiguration": {
                    "enabled": true,
                    "firewallMode": "Prevention",
                    "ruleSetType": "OWASP",
                    "ruleSetVersion": "3.0",
                    "disabledRuleGroups": [],
                    "requestBodyCheck": true,
                    "maxRequestBodySizeInKb": 128,
                    "fileUploadLimitInMb": 100
                },
                "enableHttp2": false,

                  "probes": [
                    {
                        "name": "[variables('healthprobename')]",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('appGwname')), '/probes/',variables('healthprobename'))]",
                        "properties": {
                            "protocol": "Https",
                            "host": "[parameters('Hostname')]",
                            "path": "/sap/wdisp/admin/public/default.html",
                            "interval": 30,
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": false,
                            "minServers": 0,
                            "match": {
                                "statusCodes": [
                                    "200-499"
                                ]
                            }
                        }
                    } ]
                    
                    ,
                
                "requestRoutingRules": [
                    {
                        "Name": "[variables('rulename')]",
                        "properties": {
                            "RuleType": "Basic",
                            "httpListener": {
                                "id": "[concat(variables('appGwId'), '/httpListeners/',variables('listenername'))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('appGwId'), '/backendAddressPools/',variables('bpname'))]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(variables('appGwId'), '/backendHttpSettingsCollection/',variables('httpsettingname'))]"
                            }
                        }
                    }
                ]





            }
        }
    ]
}